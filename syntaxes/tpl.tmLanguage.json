{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Zotonic",
	"scopeName": "source.tpl",
	"injections": {
		"L:meta.tag, L:source.css, L:source.js, L:meta.block.js, L:string": {
			"patterns": [
				{
					"include": "#tpl-stuff"
				}
			]
		}
	},
	"patterns": [
		{
			"include": "text.html.tpl"
		},
		{
			"include": "#js"
		},
		{
			"include": "#tpl-stuff"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.tpl",
					"begin": "{#",
					"end": "#}"
				},
				{
					"name": "comment.block.tpl",
					"begin": "(?={%\\s*comment\\s*%})",
					"end": ".*?(?:{%\\s*endcomment\\s*%})"
				}
			]
		},
		"js": {
			"patterns": [
				{
					"begin": "(?<={%\\s*javascript\\s*%})",
					"end": ".*?(?={%\\s*endjavascript\\s*%})",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "source.js.tpl"
						}
					]
				}
			]
		},
		"tags": {
			"patterns": [
				{
					"name": "tags.tpl",
					"begin": "{%",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.tag.begin.tpl"
						}
					},
					"end": "%}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.tag.end.tpl"
						}
					},
					"patterns": [
						{
							"include": "#entities"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#strings"
						},
						{
							"match": "(?<=\\s*wire).*?(?=%})",
							"captures": {
								"0": {
									"patterns": [
										{
											"name": "keyword.argument.wire.tpl",
											"match": "\\b(id|type|propagate|target|action|postback|delegate)\\b"
										},
										{
											"include": "#strings"
										},
										{
											"include": "#keywords"
										}
									]
								}
							}
						}
					]
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"name": "entity.name.built-in.tag.tpl",
					"match": "\\b(all catinclude|all include|autoescape|block|cache|call|catinclude|comment|cycle|extends|filter|firstof|for|if|ifchanged|ifequal|ifnotequal|image|image_data_url|image_url|include|inherit|javascript|lib|load|media|now|overrules|print|raw|regroup|spaceless|templatetag|translate|trans|url|with)\\b"
				},
				{
					"name": "entity.name.built-in.end.tag.tpl",
					"match": "\\b(empty|endfor|endblock|endautoescape|else|elif|elseif|endif|endcomment|endifequal|endifnotequal|endspaceless|endwith|endcache|endfilter|endjavascript)\\b"
				},
				{
					"name": "entity.name.module.tag.tpl",
					"match": "\\b(button|chart_pie|chart_pie3d|cotonic_pathname_search|debug|draggable|droppable|google_chart|inplace_textbox|lazy|live|loremipsum|mailinglist_subscribe|menu|pager|poll|script|sortable|sorter|spinner|tabs|validate|wire|wire_args|worker)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.base.filter.tpl",
					"match": "\\b(add_day|make_list|add_hour|make_value|add_month|match|add_week|max|add_year|md5|after|member|append|min|as_atom|minmax|before|ne_day|brlinebreaks|nthtail|capfirst|parse_url|center|pickle|chunk|pprint|content_type_label|rand|content_type_urls|random|datediff|randomize|date|range|date_range|replace_args|element|replace|embedded_media|reversed|eq_day|rjust|escape_check|round|escape|sanitize_html|escape_ical|sanitize_url|escapejs|sha1|escapejson|show_media|escape_link|slice|escapexml|slugify|exclude|sort|filesizeformat|split|filter|split_in|first|stringify|fix_ampersands|striptags|flatten_value|sub_day|force_escape|sub_hour|format_duration|sub_month|format_integer|sub_week|format_number|sub_year|format_price|summary|group_by|tail|group_firstchar|timesince|group_title_firstchar|to_binary|if|toc|if_undefined|to_integer|index_of|to_json|in_future|tokens|in_past|to_name|insert|trans_filled|is_a|trim|is_defined|truncate|is_even|truncate_html|is_list|unescape|is_not_a|upper|is_number|url_abs|is_site_url|urlencode|is_undefined|url|is_visible|urlize|join|utc|last|vsplit_in|length|without_embedded_media|linebreaksbr|without|ljust|yesno|lower)\\b"
				},
				{
					"name": "keyword.operator.comparison.tpl",
					"match": "==|!=|<=|>=|<|>"
				},
				{
					"name": "keyword.operator.assignment.tpl",
					"match": "=|:|\\b(as)\\b"
				},
				{
					"name": "keyword.operator.arithmetic.tpl",
					"match": "\\-|\\+|\\*|/"
				},
				{
					"name": "keyword.operator.pipe.tpl",
					"match": "\\|"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.tpl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.tpl",
					"match": "\\\\."
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.tpl",
					"comment": "trans tag uses a different approach to variables",
					"begin": "(?<!{%\\s*trans\\s.*)({{)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.variable.begin.tpl"
						}
					},
					"end": "}}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.variable.end.tpl"
						}
					},
					"patterns": [
						{
							"include": "#keywords"
						},
						{
							"include": "#strings"
						},
						{
							"patterns": [
								{
									"match": "(?<=\\|)\\w+",
									"captures": {
										"0": {
											"patterns": [
												{
													"include": "#keywords"
												}
											]
										}
									}
								}
							]
						}
					]
				},
				{
					"begin": "(?<={%\\s*trans\\s.*)(?<=\".*)([^{])({)([^{])",
					"beginCaptures": {
						"2": {
							"name": "punctuation.definition.tag.begin.tpl"
						}
					},
					"end": "([^}])(})([^}])",
					"endCaptures": {
						"2": {
							"name": "punctuation.definition.tag.end.tpl"
						}
					},
					"name": "variable.name.tpl"
				},
				{
					"begin": "(?<={%\\s*trans\\s.*)(?<=\".*)({)({)",
					"beginCaptures": {
						"1": {
							"name": "markup.deleted"
						}
					},
					"end": "(})(})",
					"endCaptures": {
						"2": {
							"name": "markup.deleted"
						}
					}
				}
			]
		},
		"tpl-stuff": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#tags"
				},
				{
					"include": "#variables"
				}
			]
		}
	}
}
